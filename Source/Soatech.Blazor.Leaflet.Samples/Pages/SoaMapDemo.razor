@page "/soamapdemo"
@using System.Reactive.Linq
@using System.Reactive
@using ReactiveUI.Blazor
@using Soatech.Blazor.Leaflet
@using Soatech.Blazor.Leaflet.Layers
@using Soatech.Blazor.Leaflet.Samples.ViewModels

@inherits ReactiveInjectableComponentBase<SoaMapDemoViewModel>


<SoaMap
    @ref="_mapControl"
    @bind-MinZoom="ViewModel.MinZoom" 
    @bind-MaxZoom="ViewModel.MaxZoom" 
    @bind-CurrentZoom="ViewModel.Zoom" 
    @bind-Center="ViewModel.Center"
    ShowZoomControl="false" 
    ShowAttributionControl="false">
    <Layers>
        <TileLayer @bind-TileSourceTemplate="ViewModel.TileLayer"></TileLayer>
        <Marker @bind-Position="ViewModel.MarkerPosition" Draggable="true"></Marker>
        @foreach (var layer in ViewModel.Layers)
        {
            <LayerGroup Name="layer.Name" IsVisible="layer.IsVisible">
                @foreach (var marker in layer.Markers)
                {
                    <Marker @bind-Position="marker.Position" Draggable="marker.IsDraggable" RiseOnHover="marker.IsDraggable" Opacity="marker.Opacity"></Marker>
                }
            </LayerGroup>
        }
    </Layers>
</SoaMap>

<div>
    <h3>Center</h3>
    <div>Lat: <input @bind-value="ViewModel.CenterLat" /></div>
    <div>Lng: <input @bind-value="ViewModel.CenterLng" /></div>
    
    <h3>Zoom</h3>
    <div>Min-Zoom: <input @bind-value="ViewModel.MinZoom" /></div>
    <div>Max-Zoom: <input @bind-value="ViewModel.MaxZoom" /></div>
    <div>Current Zoom: <input @bind-value="ViewModel.Zoom" /></div>

    <h3>Marker Position:</h3>
    <div>Lat: <input @bind-value="ViewModel.MarkerPositionLat" /></div>
    <div>Lng: <input @bind-value="ViewModel.MarkerPositionLng" /></div>

    <h3>Layers:</h3>
    @foreach (var layer in ViewModel.Layers)
    {
        <div><input type="checkbox" checked="@layer.IsVisible" @bind-value="layer.IsVisible"  /><span>Show @layer.Name</span></div>
    }
</div>
