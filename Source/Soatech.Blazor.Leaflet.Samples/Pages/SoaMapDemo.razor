@page "/soamapdemo"
@using System.Reactive.Linq
topSystem.Reactive
@using ReactiveUI.Blazor
@using Soatech.Blazor.Leaflet
@using Soatech.Blazor.Leaflet.Layers
@using Soatech.Blazor.Leaflet.Samples.ViewModels

@inherits ReactiveInjectableComponentBase<SoaMapDemoViewModel>


<SoaMap
    @ref="_mapControl"
    @bind-MinZoom="ViewModel.MinZoom" 
    @bind-MaxZoom="ViewModel.MaxZoom" 
    @bind-CurrentZoom="ViewModel.Zoom" 
    @bind-Center="ViewModel.Center.Value"
    @bind-Bounds="ViewModel.Bounds"
    ShowZoomControl="false" 
    ShowAttributionControl="false">
    <Layers>
        <TileLayer @bind-TileSourceTemplate="ViewModel.TileLayer"></TileLayer>
        <Marker @bind-Position="ViewModel.MarkerPosition.Value" Draggable="true"></Marker>
        @foreach (var layer in ViewModel.Layers)
        {
            <LayerGroup Name="layer.Name" IsVisible="layer.IsVisible">
                @foreach (var marker in layer.Markers)
                {
                    <Marker @bind-Position="marker.Position.Value" Draggable="marker.IsDraggable" RiseOnHover="marker.IsDraggable" Opacity="marker.Opacity" OnClick="@(_ => OnMarkerClicked(marker))" ></Marker>
                }
            </LayerGroup>
        }
    </Layers>
</SoaMap>

<div>
    <div style="margin-top: 20px; margin-bottom: 10px;">
        <h3>Center</h3>
        <div>Lat: <input @bind-value="ViewModel.Center.Lat" /></div>
        <div>Lng: <input @bind-value="ViewModel.Center.Lng" /></div>
    </div>

    <div style="margin-top: 15px; margin-bottom: 10px;">
        <h3>Zoom</h3>
        <div>Min-Zoom: <input @bind-value="ViewModel.MinZoom" /></div>
        <div>Max-Zoom: <input @bind-value="ViewModel.MaxZoom" /></div>
        <div>Current Zoom: <input @bind-value="ViewModel.Zoom" /></div>
    </div>

    <div style="margin-top: 15px; margin-bottom: 10px;">
        <h3>Bounds</h3>
        <h4>SouthWest</h4>
        <div>Lat: <input @bind-value="ViewModel.Bounds.SouthWest.Lat" /></div>
        <div>Lng: <input @bind-value="ViewModel.Bounds.SouthWest.Lng" /></div>
        <h4>NorthEast</h4>
        <div>Lat: <input @bind-value="ViewModel.Bounds.NorthEast.Lat" /></div>
        <div>Lng: <input @bind-value="ViewModel.Bounds.NorthEast.Lng" /></div>
    </div>

    @if (ViewModel.SelectedMarkers.Count > 0)
    {
        <div style="margin-top: 15px; margin-bottom: 10px;">
            <h3>Selected Marker Positions:</h3>
            @foreach (var selectedMarker in ViewModel.SelectedMarkers)
            {
                <div><span>@selectedMarker.Name => Lat: <input @bind-value="selectedMarker.Position.Lat" />  Lng: <input @bind-value="selectedMarker.Position.Lng" /></span></div>
            }
        </div>
    }
    
    <div style="margin-top: 15px; margin-bottom: 10px;">
        <h3>Layers:</h3>
        @foreach (var layer in ViewModel.Layers)
        {
            <div><input type="checkbox" checked="@layer.IsVisible" @bind-value="layer.IsVisible"  /><span>Show @layer.Name</span></div>
        }
    </div>
</div>
